@using ShopApplication.Common
@using ShopWeb.Utilities
@using RetailDomain.Optionals
@inherits PageComponent

<PageTitle>Resend Email Confirmation</PageTitle>

@if (isSuccess) {
    <h1>Email confirm link sent!</h1>
    <h2>Please check your email.</h2>
}
else {
    <h1>Resend email confirmation</h1>
    <h2>Enter your email.</h2>
    <hr/>
    <div class="row">
        <div class="col-md-4">
            <EditForm Model="Request" FormName="resend-email-confirmation" OnValidSubmit="OnValidSubmitAsync" method="post">
                <DataAnnotationsValidator/>
                <ValidationSummary class="text-danger" role="alert"/>
                <div class="form-floating mb-3">
                    <InputText @bind-Value="@Request.Email" id="email" class="form-control" aria-required="true" placeholder="name@example.com"/>
                    <label for="email" class="form-label">Email</label>
                    <ValidationMessage For="@(() => Request.Email)" class="text-danger"/>
                </div>
                <button type="submit" class="w-100 btn btn-lg btn-primary">Resend</button>
            </EditForm>
        </div>
    </div>
}

@code {
    [SupplyParameterFromForm]
    ResendConfirmationRequest Request { get; } = new();
    
    bool isSuccess = false;

    async Task OnValidSubmitAsync()
    {
        await CallStartLoading( "Sending reset link..." );

        Opt<bool> result = await Http.TryPostRequest<bool>( Urls.ApiConfirmEmail, Request );

        isSuccess = result.IsOkay();

        if (!isSuccess) {
            await CallPushAlert( AlertType.Danger, $"Failed to send reset link: {result.Message()}" );
            await CallStopLoading();
            return;
        }
        
        StateHasChanged();
        await CallPushAlert( AlertType.Success, "Confirmation email link has been sent. Check your email." );
        await CallStopLoading();
    }
        
    sealed class ResendConfirmationRequest
    {
        public string Email { get; set; } = string.Empty;

        public static ResendConfirmationRequest With( string email ) =>
            new() {
                Email = email
            };
    }
}