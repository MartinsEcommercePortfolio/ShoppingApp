@page "/resend-confirmation-email"
@using Shop.Infrastructure.Common.Optionals
@using Shop.UI.Shared
@using Shop.Utilities
@inherits Shop.UI.Authentication.AuthenticationPageBase
@layout MainLayout

<PageTitle>Resend Confirmation Email</PageTitle>

<div class="col-4 mx-auto">
    @if (isSuccess) {
        <h3 class="mb-3">Email confirm link sent!</h3>
        <p>Please click the link sent to your email to activate your account.</p>
    }
    else {
        <h3 class="mb-3">Resend email confirmation</h3>
        <h6 class="mb-3">Enter your email.</h6>
        <EditForm Model="Request" FormName="resend-email-confirmation" OnValidSubmit="SendConfirmationEmail" method="post">
            <DataAnnotationsValidator/>
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="form-floating mb-3">
                <InputText type="email" @bind-Value="@Request.Email" id="email" class="form-control" aria-required="true" placeholder="name@example.com"/>
                <label for="email" class="form-label">Email</label>
                <ValidationMessage For="@(() => Request.Email)" class="text-danger"/>
            </div>
            <button type="submit" class="w-100 btn btn-lg btn-primary">Resend</button>
        </EditForm>
    }
</div>

@code {
    [SupplyParameterFromForm]
    ResendConfirmationRequest Request { get; set; } = new();
    
    bool isSuccess = false;

    async Task SendConfirmationEmail()
    {
        StartLoading( "Sending reset link..." );

        Opt<bool> result = await TrySendEmail();

        if (!result.IsOkay) {
            PushError( result, "Failed to send reset link." );
            StopLoading();
            return;
        }
        
        PushSuccess( "Confirmation email link has been sent. Check your email." );
        isSuccess = true;
        StateHasChanged();
        StopLoading();
    }
    async Task<Opt<bool>> TrySendEmail() => 
        await Http.TryPostRequest<bool>( Urls.ApiResendConfirm, Request );
        
    sealed class ResendConfirmationRequest
    {
        public string Email { get; set; } = string.Empty;
        
        public static ResendConfirmationRequest With( string email ) =>
            new() {
                Email = email
            };
    }
}