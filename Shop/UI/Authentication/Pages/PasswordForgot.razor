@page "/forgot-password"
@using System.ComponentModel.DataAnnotations
@using Shop.Infrastructure.Common.Optionals
@using Shop.UI.Shared
@using Shop.Utilities
@inherits Shop.UI.Authentication.AuthenticationPageBase
@layout MainLayout

<PageTitle>Forgot Password</PageTitle>

<div class="col-4 mx-auto">
    @if (isSuccess) {
        <h3>Password reset link sent!</h3>
        <hp>Please check your email.</hp>
        <p><button class="btn btn-link" @onclick="GoHome">Click Here</button> to return to the homepage.</p>
    }
    else {
        <h3>Forgot your password?</h3>
        <p>Enter your email.</p>
        <EditForm Model="Request" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator/>
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="form-floating mb-3">
                <InputText type="email" @bind-Value="@Request.Email" id="email" class="form-control" aria-required="true" placeholder="name@example.com"/>
                <label for="email" class="form-label">Email</label>
                <ValidationMessage For="@(() => Request.Email)" class="text-danger"/>
            </div>
            <button type="submit" class="w-100 btn btn-lg btn-primary">Send Reset Email</button>
        </EditForm>
    }
</div>



@code
{
    [SupplyParameterFromForm] PasswordForgotRequest Request { get; set; } = new();
    
    bool isSuccess = false;
    
    async Task OnValidSubmitAsync()
    {
        StartLoading( "Sending reset link..." );

        Opt<bool> result = await TrySendResetLink();
        
        isSuccess = result.IsOkay;
        
        if (!isSuccess)
            PushError( result, "Failed to send reset link." );
        
        StateHasChanged();
        StopLoading();
    }
    async Task<Opt<bool>> TrySendResetLink() =>
        await Http.TryPostRequest<bool>( Urls.ApiForgotPassword, Request );

    sealed class PasswordForgotRequest
    {
        [Required, EmailAddress]
        public string Email { get; set; } = string.Empty;
    }
}