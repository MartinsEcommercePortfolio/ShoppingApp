@using Microsoft.AspNetCore.Components.Authorization
@using Shop.Infrastructure.Catalog
@using Shop.Infrastructure.Common.Optionals
@using Shop.Infrastructure.Identity
@using System.Security.Claims
@implements IDisposable
@inject AuthenticationStateProvider Auth

@if ( show ) {
    <!-- CONTAINER -->
    <div class="nav-sidebar">
        <!-- HEADER -->
        <div class="p-3 bg-dark d-flex align-items-center justify-content-between">
            <div>
                <AuthorizeView>
                    <Authorized>
                        <a class="text-decoration-none link-light fs-5" href="#">
                            <i class="oi oi-person"></i>
                            <span class="ms-2">Welcome, @userName</span>
                        </a>
                    </Authorized>
                    <NotAuthorized>
                        <a class="text-decoration-none link-light fs-5" href="#">
                            <i class="oi oi-person"></i>
                            <span class="ms-2">Hello, Sign In</span>
                        </a>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
            <button class="btn btn-close-white" @onclick="Close">
                <i class="fa-solid fa-x"></i>
            </button>
        </div>
        <!-- NAV -->
        <nav>
            <!-- FEATURES -->
            <h4 class="nav-sidebar-header">Shop Products</h4>
            <ul class="nav flex-column">
                <li class="nav-item">
                    <a class="nav-link" href="#">All Products</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">On Sale</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Featured</a>
                </li>
            </ul>
            <!-- CATEGORIES -->
            <MainNavigationCategories/>
            <!-- ACCOUNT -->
            <h4 class="nav-sidebar-header">Account</h4>
            <ul class="nav flex-column">
                <AuthorizeView>
                    <Authorized>
                        <li class="nav-item">
                            <a class="nav-link" href="#">Account</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">Purchases</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">Logout</a>
                        </li>
                    </Authorized>
                    <NotAuthorized>
                        <li class="nav-item">
                            <a class="nav-link" href="#">Sign In</a>
                        </li>
                    </NotAuthorized>
                </AuthorizeView>
            </ul>
        </nav>
    </div>
}

@code {
    [Parameter] public MainNavigationTop TopMenu { get; set; } = default!;

    string userName = "No user";
    bool show = false;

    public void Open()
    {
        show = true;   
        StateHasChanged();
    }
    public void Close()
    {
        show = false;
        StateHasChanged();
    }
    public void Dispose()
    {
        //TopMenu.OnToggleSidebar -= ToggleSidebar;
        //TopMenu.OnSessionLoaded -= SetAuthorization;
        //TopMenu.OnCategoriesLoaded -= SetCategories;
    }
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        /*AuthenticationState authState = await Auth.GetAuthenticationStateAsync();
        ClaimsPrincipal? user = authState.User;

        userName = (user?.Identity is not null && user.Identity.IsAuthenticated
                ? user.Identity.Name
                : "Username not found")
            ?? string.Empty;*/

        //TopMenu.OnCategoriesLoaded += SetCategories;
        //TopMenu.OnSessionLoaded += SetAuthorization;
        //TopMenu.OnToggleSidebar += ToggleSidebar;
    }
    protected override void OnInitialized()
    {
        base.OnInitialized();
        //TopMenu.OnCategoriesLoaded += SetCategories;
        //TopMenu.OnSessionLoaded += SetAuthorization;
        //TopMenu.OnToggleSidebar += ToggleSidebar;
    }
}