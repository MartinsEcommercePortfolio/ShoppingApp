@using System.Timers
@using Shop.Types.Products
@using Shop.Types.Products.Dtos
@using Shop.Utilities

<!-- CONTAINER -->
<div class="product-slider-container shadow">
    
    <!-- LEFT BUTTON -->
    <button class="btn btn-outline-light product-slider-button" @onclick="OnClickPrevious">❮</button>

    <!-- SLIDER -->
    <div class="product-slider">
        
        <!-- TITLE -->
        <h6 class="product-slider-heading">
            @Title
        </h6>

        <!-- PRODUCTS -->
        <div class="product-slider-list">
            @foreach ( ProductModel p in _showProducts )
            {
                <ProductCard Product="@p" CardType="@ProductCard.Type.Slider"/>
            }
        </div>
    </div>
    
    <!-- RIGHT BUTTON -->
    <button class="btn btn-outline-light product-slider-button" @onclick="OnClickNext">❯</button>
</div>

@code
{
    [Parameter] public string Title { get; set; } = string.Empty;
    List<ProductModel> _products = [];
    List<ProductModel> _showProducts = [];
    Timer _timer = default!;
    int _currentIndex = 0;
    int? _posX;
    int? _posY;

    public void SetLocation( int? x, int? y )
    {
        _posX = x;
        _posY = y;
        StateHasChanged();
    }
    public void SetProducts( List<ProductModel> products )
    {
        _products = products;
        _currentIndex = 0;
        UpdateVisibleProducts();
        StateHasChanged();
    }
    void UpdateVisibleProducts()
    {
        List<ProductModel> newProducts = [];

        for ( int i = _currentIndex; i < _products.Count; i++ )
            newProducts.Add( _products[i] );
        for ( int i = 0; i < _currentIndex; i++ )
            newProducts.Add( _products[i] );
        _showProducts = newProducts;
        StateHasChanged();
    }
    void OnClickNext()
    {
        _currentIndex++;
        if (_currentIndex >= _products.Count)
            _currentIndex = 0;
        UpdateVisibleProducts();
    }
    void OnClickPrevious()
    {
        _currentIndex--;
        if (_currentIndex < 0)
            _currentIndex = _products.Count - 1;
        UpdateVisibleProducts();
    }
    string GetDetailsUrl( ProductSummaryDto p ) =>
        Consts.GetProductDetailsUrl( p.Id );
}