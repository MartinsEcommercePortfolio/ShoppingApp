@using Shop.Infrastructure.Catalog.Search.Dtos
@using Shop.Infrastructure.Catalog.Search.Models
@using Shop.Utilities
@using Shop.Infrastructure.Catalog.Products.Models

<!-- CONTAINER -->
<div class="search-list">
    @foreach (Product product in _searchItems )
    {
        <!-- ITEM -->
        <div class="search-item shadow-sm">
            <!-- IMAGE -->
            <div class="search-item-img mb-1">
                <a href="@GetDetailsLink( product )">
                    <img src="@product.Image" alt="@product.Name"/>
                </a>
            </div>
            <!-- SUMMARY -->
            <ProductSummary Product="@product"/>
        </div>
    }
</div>

@code {
    public void ChangeSearchResults( List<Product> items )
    {
        _searchItems = items;
        StateHasChanged();
    }

    List<Product> _searchItems = [];

    public void Refresh()
    {
        StateHasChanged();
    }

    static string GetDetailsLink( Product item ) =>
        $"{Consts.PageProductDetails}?ProductId={item.Id}";
    static string GetRatingCss( Product item, int level ) =>
        item.Rating >= level ? "rating-star-full" : "rating-star-empty";
    static string GetShippingText( Product item ) =>
        item.IsInStock ? $"Get within {item.ShippingDays} days." : "Out of stock.";
}