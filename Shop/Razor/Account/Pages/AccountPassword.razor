@page "/account/password"
@using System.ComponentModel.DataAnnotations
@using Shop.Infrastructure.Common.Optionals
@using Shop.Utilities
@inherits AccountPageBase
@layout AccountLayout

<PageTitle>Change Password</PageTitle>

<!-- WRAPPERS -->
<div class="content-container">
    <div class="auth-container">
        <!-- TITLE -->
        <h3>Password</h3>
        <hr/>
         <!-- FORM -->
        <EditForm Model="@Request" FormName="change-password" OnValidSubmit="OnValidSubmitPasswordAsync" method="post">
            <DataAnnotationsValidator/>
            <ValidationSummary class="text-danger" role="alert"/>
            <!-- OLD PASSWORD -->
            <div class="form-floating mb-3">
                <InputText type="password" @bind-Value="@Request.OldPassword" id="old-password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="Please enter your old password."/>
                <label for="old-password" class="form-label">Old Password</label>
                <ValidationMessage For="@(() => Request.OldPassword)" class="text-danger"/>
            </div>
            <!-- NEW PASSWORD -->
            <div class="form-floating mb-3">
                <InputText type="password" @bind-Value="@Request.NewPassword" id="new-password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Please enter your new password."/>
                <label for="new-password" class="form-label">New Password</label>
                <ValidationMessage For="@(() => Request.NewPassword)" class="text-danger"/>
            </div>
            <!-- CONFIRM PASSWORD -->
            <div class="form-floating mb-3">
                <InputText type="password" @bind-Value="@Request.ConfirmPassword" id="confirm-password" class="form-control" autocomplete="confirm-password" aria-required="true" placeholder="Please confirm your new password."/>
                <label for="confirm-password" class="form-label">Confirm Password</label>
                <ValidationMessage For="@(() => Request.ConfirmPassword)" class="text-danger"/>
            </div>
            <!-- SUBMIT -->
            <button type="submit" class="btn btn-submit btn-icon"><i class="fa fa-key me-2"></i>Update Password</button>
        </EditForm>
    </div>
</div>

@code {
    UpdatePasswordRequest Request = new();
    
    async Task OnValidSubmitPasswordAsync()
    {
        StartLoading( "Updating Password..." );
        
        Reply<string> token = await Auth.GetAccessToken();
        if (!token.IsOkay) {
            PushError( "Invalid credentials." );
            StopLoading();
            return;   
        }
        
        Reply<bool> result = await Http.TryPostRequest<bool>( Urls.ApiUpdatePassword, Request, token.Data );

        if (!result.IsOkay) {
            PushError( result, "Failed to update password." );
            StopLoading();
            return;
        }
        
        PushSuccess( "Password successfully updated." );
        ClearForm();
        StopLoading();
    }
    void ClearForm()
    {
        Request = new UpdatePasswordRequest();
        StateHasChanged();
    }

    sealed class UpdatePasswordRequest
    {
        [Required, DataType( DataType.Password ), Display( Name = "Current password" )]
        public string OldPassword { get; set; } = string.Empty;

        [Required, StringLength( 100, ErrorMessage = "The password must be at least 8 and at max 40 characters long.", MinimumLength = 8 ), DataType( DataType.Password ), Display( Name = "New password" )]
        public string NewPassword { get; set; } = string.Empty;

        [DataType( DataType.Password ), Display( Name = "Confirm new password" ), Compare( "NewPassword", ErrorMessage = "The new password and confirmation password do not match." )]
        public string ConfirmPassword { get; set; } = string.Empty;
    }
}