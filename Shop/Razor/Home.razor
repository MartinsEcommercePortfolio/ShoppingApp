@page "/"
@using Shop.Infrastructure.Catalog.Products.Dtos
@using Shop.Razor.Catalog
@using Shop.Razor.Shared.Components
@using Shop.Utilities
@inherits Shop.Razor.Shared.ShopPage

<PageTitle>Home</PageTitle>

<div class="content-container position-relative">
    <LoadingPanelComponent @ref="@_loadingPanel"/>
    <div class="d-flex flex-column align-items-center justify-content-start gap-3">
        <ProductSlider @ref="_featuredSlider"/>
        <ProductSlider @ref="_salesSlider"/>
        <ProductSlider @ref="_sellingSlider"/>
    </div>
</div>

@code 
{
    LoadingPanelComponent _loadingPanel = default!;
    ProductSlider _featuredSlider = default!;
    ProductSlider _salesSlider = default!;
    ProductSlider _sellingSlider = default!;
    bool _parametersSet = false;
    ProductSpecialsDto _specials = ProductSpecialsDto.Empty();

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        if (_parametersSet)
            return;
        _loadingPanel.ToggleLoading( true );
        var reply = await Http.GetAsync<ProductSpecialsDto>( Consts.ApiGetSpecials );
        if (!reply)
        {
            PushWarning( "Failed to load product specials." );
            //_loadingPanel.ToggleLoading( false );
            return;
        }
        _specials = reply.Data;
        _loadingPanel.ToggleLoading( true, "Loading product specials..." );
        _featuredSlider.SetProducts( _specials.TopFeatured );
        _salesSlider.SetProducts( _specials.TopSales );
        _sellingSlider.SetProducts( _specials.TopSelling );
        _parametersSet = true;
        //_loadingPanel.ToggleLoading( false );
        StateHasChanged();
    }
}