@page "/"
@using Shop.Razor.Catalog
@using Shop.Razor.Shared.Components
@using Shop.Types.Products
@using Shop.Types.Products.Dtos
@using Shop.Utilities
@inherits Shop.Razor.Shared.ShopPage

<PageTitle>Home</PageTitle>

<div style="background-color: #dee2e6;">
    <div class="content-container position-relative">
        <LoadingPanelComponent @ref="@_loadingPanel"/>
        <div class="d-flex flex-column align-items-stretch justify-content-start px-0 py-3 gap-3">
            <ProductSlider @ref=" _featuredSlider" Title="Featured Products"/>
            <ProductSlider @ref=" _salesSlider" Title="Hot Deals"/>
            <ProductSlider @ref=" _sellingSlider" Title="Best Selling"/>
        </div>
    </div>
</div>

@code 
{
    LoadingPanelComponent _loadingPanel = default!;
    ProductSlider _featuredSlider = default!;
    ProductSlider _salesSlider = default!;
    ProductSlider _sellingSlider = default!;
    ProductSpecialsDto _specials = ProductSpecialsDto.Empty();

    protected override async Task OnAfterRenderAsync( bool firstRender )
    {
        await base.OnAfterRenderAsync( firstRender );
        if (!firstRender)
            return;
        _ = LoadSpecialsAsync();
    }

    async Task LoadSpecialsAsync()
    {
        _loadingPanel.ToggleLoading( true, "Loading product specials..." );
        await Utils.Delay();
        var reply = await Http.GetAsync<ProductSpecialsDto>( Consts.ApiGetSpecials );
        if (!reply)
        {
            PushWarning( "Failed to load product specials." );
            _loadingPanel.ToggleLoading( false );
            return;
        }
        _specials = reply.Data;
        _featuredSlider.SetProducts( ProductModel.From( _specials.TopFeatured ) );
        _salesSlider.SetProducts( ProductModel.From( _specials.TopSales ) );
        _sellingSlider.SetProducts( ProductModel.From( _specials.TopSelling ) );

        _loadingPanel.ToggleLoading( false );
        StateHasChanged();
    }
}