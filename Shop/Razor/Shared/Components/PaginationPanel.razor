<ul class="pagination mx-auto shadow">
    <li class="page-item @GetPreviousDisabledClass()">
        <a class="page-link" href="javascript:void(0)" @onclick="@(() => ChangePage( _currentPage - 1 ))">
            <i class="fa-solid fa-caret-left"></i>
        </a>
    </li>
    
    @for ( int i = _startPage; i <= _endPage; i++ )
    {
        int index = i;
        <li class="page-item @(_currentPage == i ? "active" : "")">
            <a class="page-link" href="javascript:void(0)" @onclick="@(() => ChangePage( index ))">@i</a>
        </li>
    }
    
    <li class="page-item @GetNextDisabledClass()">
        <a class="page-link" href="javascript:void(0)" @onclick="@(() => ChangePage( _currentPage + 1 ))">
            <i class="fa-solid fa-caret-right"></i>
        </a>
    </li>
</ul>

@code 
{
    int _currentPage = 1;
    int _totalPages = 1;
    int _startPage = 0;
    int _endPage = 0;

    public event Func<int, Task>? OnPageChange;

    internal void Set( int page, int pageSize, int totalResults )
    {
        _totalPages = ( totalResults + pageSize - 1 ) / pageSize; // Round up to ensure correct page count
        _currentPage = page;
        UpdateStartAndEndPages();
        StateHasChanged();
    }

    void ChangePage( int page )
    {
        if ( page < 1 )
            page = 1;

        if ( page > _totalPages )
            page = _totalPages;

        _currentPage = page;
        OnPageChange?.Invoke( _currentPage );
    }
    
    void UpdateStartAndEndPages()
    {
        int newStartPage = Math.Max( 1, _currentPage - 2 );
        int newEndPage = Math.Min( _totalPages, _currentPage + 2 );

        if ( _currentPage - newStartPage < 2 )
            newEndPage = Math.Min( _totalPages, newEndPage + ( 2 - ( _currentPage - newStartPage ) ) );

        if ( newEndPage - _currentPage < 2 )
            newStartPage = Math.Max( 1, newStartPage - ( 2 - ( newEndPage - _currentPage ) ) );

        _startPage = newStartPage;
        _endPage = newEndPage;
    }
    string GetPreviousDisabledClass() => _currentPage == 1 ? "disabled" : "";
    string GetNextDisabledClass() => _currentPage >= _totalPages ? "disabled" : "";
}